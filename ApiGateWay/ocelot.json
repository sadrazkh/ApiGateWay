{
  "Routes": [
    {
      "DownstreamPathTemplate": "/{rout}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7048
        }
      ],
      "UpstreamPathTemplate": "/pr/{rout}",
      "UpstreamHttpMethod": [ "Get" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Admin"
      },
      "AddHeadersToRequest": {
        "Role": "Claims[Role] > value? "
        //"Role": "Claims[Role] > value[1] > |"
      }
      //"AddClaimsToRequest": {
      //  "Role": "Claims[Role] > value[0] > |",
      //  //"UserId": "Claims[role] > value[1] > |"
      //},
    },
    {
      "DownstreamPathTemplate": "/{rout}",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7202
        },
        {
          "Host": "localhost",
          "Port": 7048
        }

      ],
      "UpstreamPathTemplate": "/loadBalance/{rout}",
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
        //"Type" : "LeastConnection"
      },
      "UpstreamHttpMethod": [ "Get" ]
    },
    {
      "DownstreamPathTemplate": "/todos",
      "DownstreamScheme": "https",
      "DownstreamHostAndPorts": [
        {
          "Host": "jsonplaceholder.typicode.com",
          "Port": 443
        }
      ],
      "UpstreamPathTemplate": "/lessons",
      //"DangerousAcceptAnyServerCertificateValidator": true,
      //"LoadBalancer": "RoundRobin",
      //"LoadBalancer": "LeastConnection",
      "UpstreamHttpMethod": [ "Get" ],
      //"UpstreamHost": "jsonplaceholder.typicode.com",
      "RateLimitOptions": {

        //This value specifies enable endpoint rate-limiting.(true/false)
        "EnableRateLimiting": true,

        //This value specifies the maximum number of requests that a client can make in a defined period.
        "Limit": 1,

        //This value specifies that we can retry after a certain number of seconds
        "PeriodTimespan": 20,

        //This value specifies the period that the limit applies to, such as 1s, 5m, 1h,1d and so on.
        //If you make more requests in the period than the limit allows then you need to wait for PeriodTimespan to elapse before you make another request
        "Period": "10s",

        //This an array that contains the whitelist of the client. it means that the client in array will not be affected by the rate-limiting
        "ClientWhitelist": []
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "https://localhost:7096",
    "RateLimitOptions": {
      "QuotaExceededMessage": "You want more API, pay some money !!!!",
      "HttpStatusCode": 429
    }
  },
  "SwaggerEndPoints": [
    {
      "Key": "contacts",
      "Config": [
        {
          "Name": "Contacts API",
          "Version": "v1",
          "Url": "http://localhost:7096/swagger/v1/swagger.json"
        }
      ]
    }
  ]
}